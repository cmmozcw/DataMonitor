
// DMoniterDlg.h : 头文件
//

#pragma once
#include "afxwin.h"
#include "PublicInterface.h"
#include "PetroData.h"
#include <string>
// CDMoniterDlg 对话框
class CDMoniterDlg : public CDialogEx
{
// 构造
public:
	CDMoniterDlg(CWnd* pParent = NULL);	// 标准构造函数

// 对话框数据
	enum { IDD = IDD_DMONITER_DIALOG };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV 支持

public:
	HMENU m_hMenu;//菜单
	
	CRect rectMain;//主界面区域
	CRect rectView;//绘图界面区域
	CRect rectPanel;//数据参数区域
	CRect rectScale;//比例图标区域
	CRect rectScrollV;//垂直滚动条区域
	int minMainDialogWidth, minMainDialogHeight;//主界面最小长度、宽度
	int m_SM_CXFULLSCREEN,m_SM_CYFULLSCREEN;//获取屏幕分辨率

	int processType;//处理数据类型：0 - 从串口获得的数据，1 - 从文件获取的数据
	BYTE* pData;//存储文件数据
	CTypedPtrList < CPtrList, CPetroData * >petroList;//数据存储链表

	
	CDC   MemDC;          //双缓冲 定义一个显示设备对象  
	CBitmap   MemBitmap;  //双缓冲 定义一个位图对象  

	//why add 绘图变量
	unsigned long base;//深度起点
	unsigned long bias;//深度偏移量
	long counter;//计数器

	POSITION pos;//当前记录位置
	CPetroData* pPData;//得到队列数据
	CPetroData* pOldPData;//保存前一个数据队列
	CRect rectTotal;

	int			unitPixel;//每米对应像素值
	int			unitRatio;//每米对应像素值的系数
	int			m_iterator;//绘图迭代数
	CRect		m_screenRect;// m_screenRect - view的可见范围相对屏幕左上角坐标
	CRect		m_clientRect;// m_clientRect - view的可见范围客户区
	CRect		m_totalRect;// m_totalRect - 整个要绘制区域的范围，包括不可见

	CRect		m_plot1Rect;// m_plot1Rect - borderspace1
	CRect		m_plot2Rect;// m_plot2Rect - borderspace2
	CRect		m_plot3Rect;// m_plot3Rect - borderspace3

	SIZE sizeTotal;//整个要绘制区域的范围，包括不可见

	double		minDepth;//可见范围最小深度
	double		maxDepth;//可见范围最大深度
	double		maxPreDepth;//可见范围移动之前的最大深度
	double		minDepthLimit;//作业中最小深度
	double		maxDepthLimit;//作业中最大深度
	bool		m_bAutoScrollY;		// automatic y range scrolling
	bool		m_bDirectDown;		// 向下绘制
	bool		bScroll;//绘制到底部开始滚动时设置为true
	int			m_drawCount;//每次绘制多少个数据
	int			m_step;//每次移动距离，以米为单位
	bool		bTimer;
	//颜色
	COLORREF	m_gridColor;		// grid line color
	//字体设置
	CFont		m_font;
	LOGFONT		m_zoomFont;

	//保存各个可测变量的最大最小值
	long tempLimitArray[2];
	long gmLimitArray[2];
	long rmLimitArray[2];
	long cclLimitArray[2];
	long magLimitArray[3][2];

	DATA_TEMP olddeptArray;
	DATA_TEMP oldtempArray;
	DATA_TEMP oldgmArray;
	DATA_TEMP oldrmArray;
	DATA_TEMP oldcclArray;
	DATA_TEMP oldmagArray[3];

public:
	void GetRectParam(CRect rectMain);
	void ClearPetroData();
	void InitArrayData();
	void InitOldArrayData();
	void CDMoniterDlg::ParseData(BYTE* tmp, WPARAM wParam);//解析串口数据
	int CheckString( std::string str );
	void DrawData(CDC* pDC);
	
	void DrawBasic(CDC * pDC);//绘图函数初始
	void DrawGrid(CDC * pDC);//绘制横纵坐标网格
	void DrawPlot(CDC* pDC);//绘制坐标数据

	void PrepareDraw();
	void GetMaxMinData();
	unsigned long GetMinData(DATA_PART tmp,unsigned long m);

	void StartTimer();
	void StopTimer();
	void CalculateParam();

	void DrawCurve(CDC* pDC , double upDepth, double DownDepth);//绘制测绘数据
	void DrawDeptData(CDC* pDC ,CPetroData* pPData,CPen* pPpen);//绘制高度曲线
	void DrawTempData(CDC* pDC ,CPetroData* pPData,CPen* pPpen);//绘制温度曲线
	void DrawRmData(CDC* pDC ,CPetroData* pPData,CPen* pPpen);//绘制Rm曲线
	void DrawMagxData(CDC* pDC ,CPetroData* pPData,CPen* pPpen);//绘制磁三分量曲线
	void DrawGmData(CDC* pDC ,CPetroData* pPData,CPen* pPpen);//绘制Gm曲线
	void DrawCclData(CDC* pDC ,CPetroData* pPData,CPen* pPpen);//绘制Ccl曲线
// 实现
protected:
	HICON m_hIcon;

	// 生成的消息映射函数
	virtual BOOL OnInitDialog();
	afx_msg void OnSysCommand(UINT nID, LPARAM lParam);
	afx_msg void OnPaint();
	afx_msg HCURSOR OnQueryDragIcon();
	DECLARE_MESSAGE_MAP()
public:
	afx_msg void OnBnClickedOk();
	afx_msg void OnBnClickedCancel();
	// 绘图区域垂直滚动条
	CScrollBar mScrollV;
	afx_msg void OnGetMinMaxInfo(MINMAXINFO* lpMMI);
	afx_msg void OnSize(UINT nType, int cx, int cy);
	afx_msg void OnDestroy();
	afx_msg void OnFileOpen();
	afx_msg void OnUpdateFileOpen(CCmdUI *pCmdUI);
	virtual BOOL PreTranslateMessage(MSG* pMsg);
	afx_msg void OnTimer(UINT_PTR nIDEvent);
	afx_msg void OnVScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar);
};
